trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*

variables:
  buildConfiguration: Release
  dotnetSdkVersion: '3.1.x'
  isGitHubTag: $[startsWith(variables['Build.SourceBranch'], 'refs/tags/v')]
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  NUGET_XMLDOC_MODE: skip

stages:
- stage: Build_and_Test
  condition: eq(variables['isGitHubTag'], false)
  jobs:
  - job: Build_and_Test
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: $(dotnetSdkVersion)
      displayName: 'Install .NET Core SDK $(dotnetSdkVersion)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'update -g dotnet-format'
      displayName: 'Install .NET Core format tool'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '-c $(buildConfiguration)'
      displayName: 'Build for test'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'format'
        arguments: '--dry-run --check --verbosity diagnostic'
      displayName: 'Lint C# code'

- stage: Publish
  condition: eq(variables['isGitHubTag'], true)
  jobs:
  - job: Publish
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: $(dotnetSdkVersion)
      displayName: 'Install .NET Core SDK $(dotnetSdkVersion)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        arguments: '-c $(buildConfiguration) -o $(Build.SourcesDirectory)/latest'
      displayName: 'Build for deployment'

    - publish: latest
      artifact: function
      displayName: 'Upload artifacts'

- stage: Deploy
  dependsOn: Publish
  condition: succeeded('Publish')
  jobs:
  - job: Deploy
    pool:
      vmImage: 'windows-latest'
    steps:
      - checkout: none
      - download: current

      - task: AzureFileCopy@3
        inputs:
          sourcePath: '$(Pipeline.Workspace)/**/latest.zip'
          azureSubscription: 'Visual Studio Enterprise'
          destination: 'AzureBlob'
          storage: 'shibayan'
          containerName: 'azure-keyvault-letsencrypt'
          blobPrefix: 'v3'
        displayName: 'Deploy to Storage Blob'